# EcommerceDB SQL Scripts - README

This repository contains a set of SQL scripts designed to create and manage an e-commerce database. 

## File Organization

The SQL scripts are divided into the following files:

1.  **01\_database\_creation.sql**:
    *   Contains SQL statements to create the `EcommerceDB` database and define the schema for the following tables:
        *   `Customers`
        *   `Categories`
        *   `Products`
        *   `Orders`
        *   `OrderDetails`
        *   `Payments`

2.  **02\_data\_insertion.sql**:
    *   Includes SQL `INSERT` statements to populate the tables with initial data.
    *   Inserts sample records into `Customers`, `Categories`, `Products`, `Orders`, `OrderDetails`, and `Payments` tables.

3.  **03\_select\_queries.sql**:
    *   Consists of various `SELECT` queries to retrieve and analyze data from the database.
    *   Demonstrates basic selections, aggregate functions, `JOIN` operations, and pattern matching using `LIKE`.

4.  **04\_update\_queries.sql**:
    *   Contains SQL `UPDATE` statements to modify existing data in the `Products` table.
    *   Includes commands to temporarily disable `SQL_SAFE_UPDATES` for batch updates.

5.  **05\_delete\_queries.sql**:
    *   Includes SQL `DELETE` statements to remove records from the `Customers` table.

6.  **06\_table\_alterations.sql**:
    *   Features SQL `ALTER TABLE` statements to modify the structure of the `Customers` and `Products` tables.
    *   Changes column constraints such as `NOT NULL`.

7.  **07\_advanced\_features.sql**:
    *   Demonstrates advanced SQL features such as stored procedures, prepared statements, and views.
    *   Includes a stored procedure `GetTotalSpent` to calculate the total spending of a customer.
    *   Creates a view `CustomerTotalSpent` to display customer spending information.

